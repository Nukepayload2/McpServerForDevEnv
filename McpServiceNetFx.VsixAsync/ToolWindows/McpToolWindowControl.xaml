<UserControl x:Class="ToolWindows.McpToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:McpServiceNetFx.VsixAsync.ToolWindows"
             xmlns:core="clr-namespace:McpServiceNetFx;assembly=McpServiceNetFx.Core"
             xmlns:res="clr-namespace:McpServiceNetFx.My.Resources;assembly=McpServiceNetFx.Core"
             xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="350">

    <UserControl.Resources>
        <!-- DataGrid 列标题样式 -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}"/>
        </Style>

        <!-- TabItem 样式 -->
        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}">
                            <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

          </UserControl.Resources>

    <Grid Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- MCP 工具授权管理 -->
        <GroupBox Grid.Row="0" Header="{x:Static res:Resources.GroupBoxMcpToolAuthorization}" Margin="5" Padding="8"
                  Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                  Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- 批量操作按钮 -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,8">
                    <Button x:Name="AuthorizeAllButton" Content="{x:Static res:Resources.ButtonAuthorizeAll}" Margin="0,0,10,0"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                    <Button x:Name="AskAllButton" Content="{x:Static res:Resources.ButtonAskAll}" Margin="0,0,10,0"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                </StackPanel>

                <!-- 工具权限数据网格 -->
                <DataGrid x:Name="ToolsDataGrid"
                          Grid.Row="1"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          GridLinesVisibility="Horizontal"
                          HeadersVisibility="Column"
                          Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                          Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          RowBackground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          AlternatingRowBackground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderFeatureName}" Binding="{Binding FeatureName}" Width="*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderDescription}" Binding="{Binding Description}" Width="1.5*" IsReadOnly="True"/>
                        <DataGridTemplateColumn Header="{x:Static res:Resources.HeaderPermissionLevel}" Width="120">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{x:Static core:PermissionLevels.Value}"
                                              SelectedItem="{Binding Permission, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              IsEditable="False"
                                              Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogComboBoxStyleKey}}"
                                              Margin="2"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                </DataGrid>

                <!-- 底部操作按钮 -->
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,8,0,0">
                    <Button x:Name="SavePermissionsButton" Content="{x:Static res:Resources.ButtonSavePermissions}" Margin="0,0,10,0"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                    <Button x:Name="ReloadPermissionsButton" Content="{x:Static res:Resources.ButtonReloadPermissions}"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                </StackPanel>
            </Grid>
        </GroupBox>

        <!-- MCP 服务管理 -->
        <GroupBox Grid.Row="1" Header="{x:Static res:Resources.GroupBoxMcpServiceStatus}" Margin="5" Padding="8"
                  Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                  Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 服务状态显示 -->
                <Border Grid.Row="0"
                        BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}"
                        BorderThickness="1" Padding="10" Margin="0,0,0,8"
                        Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- 服务控制区域 -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical">
                                <TextBlock Text="{x:Static res:Resources.TextMcpService}" FontWeight="Bold" FontSize="14"
                                          Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                                <TextBlock x:Name="ServiceStatusText" Text="{x:Static res:Resources.TextStatusStopped}" Margin="0,2,0,0"
                                          Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                            </StackPanel>
                            <ToggleButton x:Name="ServiceToggleButton" Grid.Column="1" Content="{x:Static res:Resources.ButtonStartService}"
                                          Margin="10,0,0,0" Padding="16,8"
                                          Background="#28A745" Foreground="White" BorderBrush="#28A745"/>
                        </Grid>

                        <!-- 端口配置区域 -->
                        <Border Grid.Row="1" BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}"
                                BorderThickness="1" Padding="8" Margin="0,8,0,0"
                                Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{x:Static res:Resources.TextPortNumber}" VerticalAlignment="Center" Margin="0,0,8,0"
                                          Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                                <TextBox x:Name="PortNumberTextBox" Grid.Column="1"
                                         Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogTextBoxStyleKey}}"
                                         Margin="0,0,8,0" Width="100" HorizontalAlignment="Left"
                                         Text="38080"
                                         LostFocus="PortNumberTextBox_LostFocus"/>
                                <Button x:Name="ResetPortButton" Grid.Column="2" Content="{x:Static res:Resources.ButtonResetToDefault}"
                                        Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>

                <!-- 配置示例 -->
                <TabControl Grid.Row="1"
                           Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
                    <TabItem Header="{x:Static res:Resources.TabMcpJsonConfig}">
                        <TextBox x:Name="McpJsonConfigTextBox"
                                 Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogTextBoxStyleKey}}"
                                 FontFamily="Consolas"
                                 FontSize="11"
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Auto"
                                 HorizontalScrollBarVisibility="Auto"
                                 IsReadOnly="True"
                                 Margin="0"/>
                    </TabItem>
                    <TabItem Header="{x:Static res:Resources.TabClaudeCliConfig}">
                        <TextBox x:Name="ClaudeCliConfigTextBox"
                                 Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogTextBoxStyleKey}}"
                                 FontFamily="Consolas"
                                 FontSize="11"
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Auto"
                                 HorizontalScrollBarVisibility="Auto"
                                 IsReadOnly="True"
                                 Margin="0"/>
                    </TabItem>
                </TabControl>
            </Grid>
        </GroupBox>

        <!-- ActivityLog 信息 -->
        <GroupBox Grid.Row="2" Header="{x:Static res:Resources.GroupBoxLogs}" Margin="5" Padding="8"
                  Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                  Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 操作按钮区域 -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,5">
                    <Button x:Name="ClearLogButton" Content="{x:Static res:Resources.ButtonClearLog}" Margin="0,0,5,0"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                    <Button x:Name="ViewActivityLogHelpButton"
                            Content="{x:Static res:Resources.ButtonViewActivityLogHelp}"
                            Style="{DynamicResource {x:Static vs:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
                </StackPanel>

                <!-- 日志数据网格 -->
                <DataGrid x:Name="ActivityLogDataGrid"
                          Grid.Row="1"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserSortColumns="True"
                          GridLinesVisibility="Horizontal"
                          HeadersVisibility="Column"
                          FontFamily="Consolas"
                          FontSize="11"
                          Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                          Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          RowBackground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          AlternatingRowBackground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                          BorderBrush="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBorderBrushKey}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderTime}" Binding="{Binding Timestamp}" Width="120" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderLevel}" Binding="{Binding Level}" Width="60" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderCategory}" Binding="{Binding Category}" Width="80" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static res:Resources.HeaderMessage}" Binding="{Binding Message}" Width="*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>

        <!-- 状态栏 -->
        <Border Grid.Row="3" Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}" Padding="8,4">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="StatusText" Text="{x:Static res:Resources.TextReady}" VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                <Separator Margin="10,0"/>
                <TextBlock x:Name="ToolCountText" VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                <Separator Margin="10,0"/>
                <TextBlock x:Name="ServiceCountText" VerticalAlignment="Center"
                           Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>