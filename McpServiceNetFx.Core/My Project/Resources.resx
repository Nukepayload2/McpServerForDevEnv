<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>Visual Studio MCP Server</value>
  </data>
  <data name="TabServiceManagement" xml:space="preserve">
    <value>Service Management</value>
  </data>
  <data name="TabMcpPermissions" xml:space="preserve">
    <value>MCP Permissions</value>
  </data>
  <data name="TabLogs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="TabAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ButtonRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ButtonStartService" xml:space="preserve">
    <value>Start Service</value>
  </data>
  <data name="ButtonStopService" xml:space="preserve">
    <value>Stop Service</value>
  </data>
  <data name="ButtonAllowAll" xml:space="preserve">
    <value>Allow All</value>
  </data>
  <data name="ButtonAskAll" xml:space="preserve">
    <value>Ask All</value>
  </data>
  <data name="ButtonSaveConfig" xml:space="preserve">
    <value>Save Config</value>
  </data>
  <data name="ButtonReload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ButtonClearLogs" xml:space="preserve">
    <value>Clear Logs</value>
  </data>
  <data name="ButtonExportLogs" xml:space="preserve">
    <value>Export Logs</value>
  </data>
  <data name="HeaderWindowCaption" xml:space="preserve">
    <value>Window Caption</value>
  </data>
  <data name="HeaderSolutionPath" xml:space="preserve">
    <value>Solution Path</value>
  </data>
  <data name="HeaderVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="HeaderProcessId" xml:space="preserve">
    <value>Process ID</value>
  </data>
  <data name="GroupServiceSettings" xml:space="preserve">
    <value>Service Settings</value>
  </data>
  <data name="LabelInstance" xml:space="preserve">
    <value>Instance:</value>
  </data>
  <data name="LabelPort" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="LabelStatus" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="LabelClientConfig" xml:space="preserve">
    <value>Client Config:</value>
  </data>
  <data name="TextSelectInstance" xml:space="preserve">
    <value>Please select an instance from the list above</value>
  </data>
  <data name="TextServiceNotStarted" xml:space="preserve">
    <value>Service not started</value>
  </data>
  <data name="TabJsonConfig" xml:space="preserve">
    <value>JSON Config</value>
  </data>
  <data name="TabClaudeConfig" xml:space="preserve">
    <value>Claude CLI Config</value>
  </data>
  <data name="TextJsonConfigHint" xml:space="preserve">
    <value>Add this configuration to your MCP client configuration file</value>
  </data>
  <data name="TextClaudeConfigHint" xml:space="preserve">
    <value>Run this command to add MCP server to Claude Desktop</value>
  </data>
  <data name="HeaderFeatureName" xml:space="preserve">
    <value>Feature Name</value>
  </data>
  <data name="HeaderDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="HeaderPermission" xml:space="preserve">
    <value>Permission</value>
  </data>
  <data name="HeaderTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="HeaderOperation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="HeaderResult" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="HeaderDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="TextAboutTitle" xml:space="preserve">
    <value>About This Software</value>
  </data>
  <data name="TextAboutContent" xml:space="preserve">
    <value>© 2025 Nukepayload2
This software is distributed under Apache License 2.0, permanently free.
This software is protected by Chinese and international copyright laws.
Privacy Policy: This software collects your Microsoft Visual Studio project information to support basic functions, and the information is only stored locally.
This software does not support remote information transmission, only local network loopback transmission.</value>
  </data>
  <data name="UserMessageTitle" xml:space="preserve">
    <value>User Message</value>
  </data>
  <data name="MessageLabel" xml:space="preserve">
    <value>Message:</value>
  </data>
  <data name="ButtonClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CustomMessageBoxTitle" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ButtonYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ButtonNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MsgConfirmClearLogs" xml:space="preserve">
    <value>Are you sure you want to clear all logs? This action cannot be undone.</value>
  </data>
  <data name="TitleConfirmClear" xml:space="preserve">
    <value>Confirm Clear</value>
  </data>
  <data name="MsgLogsCleared" xml:space="preserve">
    <value>Logs have been cleared</value>
  </data>
  <data name="TitleOperationSuccess" xml:space="preserve">
    <value>Operation Successful</value>
  </data>
  <data name="MsgClearLogsFailed" xml:space="preserve">
    <value>Failed to clear logs: {0}</value>
  </data>
  <data name="MsgNoLogsToExport" xml:space="preserve">
    <value>No logs to export</value>
  </data>
  <data name="TitleHint" xml:space="preserve">
    <value>Hint</value>
  </data>
  <data name="FilterXmlFiles" xml:space="preserve">
    <value>XML Files (*.xml)|*.xml|All Files (*.*)|*.*</value>
  </data>
  <data name="TitleExportLogs" xml:space="preserve">
    <value>Export Logs</value>
  </data>
  <data name="MsgLogsExported" xml:space="preserve">
    <value>Logs have been exported to: {0}</value>
  </data>
  <data name="TitleExportSuccess" xml:space="preserve">
    <value>Export Successful</value>
  </data>
  <data name="MsgExportLogsFailed" xml:space="preserve">
    <value>Failed to export logs: {0}</value>
  </data>
  <data name="MsgServiceAlreadyRunning" xml:space="preserve">
    <value>Service is already running</value>
  </data>
  <data name="MsgSelectVsInstance" xml:space="preserve">
    <value>Please select a Visual Studio instance first</value>
  </data>
  <data name="MsgServiceNotRunning" xml:space="preserve">
    <value>Service is not running</value>
  </data>
  <data name="MsgStartServiceFailed" xml:space="preserve">
    <value>Failed to start service: {0}</value>
  </data>
  <data name="MsgStopServiceFailed" xml:space="preserve">
    <value>Failed to stop service: {0}</value>
  </data>
  <data name="MsgVsInstanceExited" xml:space="preserve">
    <value>The associated Visual Studio instance has exited, MCP service has been automatically stopped</value>
  </data>
  <data name="TitleInstanceExited" xml:space="preserve">
    <value>Instance Exited</value>
  </data>
  <data name="MsgVsInstanceClosing" xml:space="preserve">
    <value>The associated Visual Studio instance is closing, MCP service has been automatically stopped</value>
  </data>
  <data name="TitleInstanceClosing" xml:space="preserve">
    <value>Instance Closing</value>
  </data>
  <data name="StatusServiceRunning" xml:space="preserve">
    <value>Service Running - Port: {0}</value>
  </data>
  <data name="MsgLoadPermissionsFailed" xml:space="preserve">
    <value>Failed to load permission configuration: {0}</value>
  </data>
  <data name="MsgSavePermissionsSuccess" xml:space="preserve">
    <value>Permission configuration saved</value>
  </data>
  <data name="TitleSaveSuccess" xml:space="preserve">
    <value>Save Successful</value>
  </data>
  <data name="MsgSavePermissionsFailed" xml:space="preserve">
    <value>Failed to save permission configuration: {0}</value>
  </data>
  <data name="MsgPermissionRequest" xml:space="preserve">
    <value>Do you want to allow the following operation?{0}{0}Feature: {1}{0}Description: {2}</value>
  </data>
  <data name="TitlePermissionConfirm" xml:space="preserve">
    <value>Permission Confirmation</value>
  </data>
  <data name="MsgRefreshVsInstancesFailed" xml:space="preserve">
    <value>Failed to refresh Visual Studio instance list: {0}</value>
  </data>
  <data name="MsgCreateToolManagerContextFailed" xml:space="preserve">
    <value>Failed to create tool manager data context: {0}</value>
  </data>
  <data name="MsgNoInstanceSelected" xml:space="preserve">
    <value>No instance selected</value>
  </data>
  <data name="TitleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="TitleWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="TitleInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="TitleConfirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="FileNoFile" xml:space="preserve">
    <value>No file</value>
  </data>

  <!-- Log operation common strings -->
  <data name="LogToolManager" xml:space="preserve">
    <value>Tool Manager</value>
  </data>
  <data name="LogPermissions" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="LogPermissionCheck" xml:space="preserve">
    <value>Permission Check</value>
  </data>
  <data name="LogGetToolManager" xml:space="preserve">
    <value>Get Tool Manager</value>
  </data>
  <data name="LogBuildSolution" xml:space="preserve">
    <value>Build Solution</value>
  </data>
  <data name="LogBuildProject" xml:space="preserve">
    <value>Build Project</value>
  </data>
  <data name="LogGetAllOpenDocuments" xml:space="preserve">
    <value>Get All Open Documents</value>
  </data>
  <data name="LogGetActiveDocument" xml:space="preserve">
    <value>Get Active Document</value>
  </data>
  <data name="LogGetSolutionInfo" xml:space="preserve">
    <value>Get Solution Info</value>
  </data>
  <data name="LogGetErrorList" xml:space="preserve">
    <value>Get Error List</value>
  </data>
  <data name="LogRunProjectCustomTools" xml:space="preserve">
    <value>Run Project Custom Tools</value>
  </data>

  <!-- Log operation results -->
  <data name="LogSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="LogFailed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="LogCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="LogSkipped" xml:space="preserve">
    <value>Skipped</value>
  </data>
  <data name="LogStarted" xml:space="preserve">
    <value>Started</value>
  </data>
  <data name="LogAllowed" xml:space="preserve">
    <value>Allowed</value>
  </data>
  <data name="LogDenied" xml:space="preserve">
    <value>Denied</value>
  </data>
  <data name="LogAskUser" xml:space="preserve">
    <value>Ask User</value>
  </data>
  <data name="LogUserAllowed" xml:space="preserve">
    <value>User Allowed</value>
  </data>
  <data name="LogUserDenied" xml:space="preserve">
    <value>User Denied</value>
  </data>
  <data name="LogUnknownPermission" xml:space="preserve">
    <value>Unknown Permission</value>
  </data>

  <!-- Log operation details -->
  <data name="LogFrameworkCreated" xml:space="preserve">
    <value>Tool manager framework created, waiting for data context</value>
  </data>
  <data name="LogFrameworkCreateFailed" xml:space="preserve">
    <value>Tool manager framework creation failed</value>
  </data>
  <data name="LogInstanceCanceled" xml:space="preserve">
    <value>Visual Studio instance selection canceled</value>
  </data>
  <data name="LogDataContextCreated" xml:space="preserve">
    <value>Data context created successfully</value>
  </data>
  <data name="LogDataContextCreateFailed" xml:space="preserve">
    <value>Data context creation failed</value>
  </data>
  <data name="LogPermissionsLoaded" xml:space="preserve">
    <value>Permission configurations loaded</value>
  </data>
  <data name="LogPermissionSync" xml:space="preserve">
    <value>Permission synchronization</value>
  </data>
  <data name="LogPermissionSet" xml:space="preserve">
    <value>Permission batch set</value>
  </data>
  <data name="LogPermissionConfigNotFound" xml:space="preserve">
    <value>Permission configuration not found, using default permission: Ask</value>
  </data>
  <data name="LogPermissionConfigFound" xml:space="preserve">
    <value>Permission configuration found</value>
  </data>
  <data name="LogGetPermission" xml:space="preserve">
    <value>Get permission</value>
  </data>
  <data name="LogToolManagerNotInitialized" xml:space="preserve">
    <value>Tool manager not initialized</value>
  </data>
  <data name="LogNoPermissionConfig" xml:space="preserve">
    <value>No permission configuration in tool manager</value>
  </data>
  <data name="LogBatchSetCompleted" xml:space="preserve">
    <value>All permissions have been set to: {0}</value>
  </data>
  <data name="LogAddedNewToolPermissions" xml:space="preserve">
    <value>Added {0} new tool permission items</value>
  </data>
  <data name="LogMcpRequest" xml:space="preserve">
    <value>MCP Request - {0}</value>
  </data>
  <data name="LogServiceStarted" xml:space="preserve">
    <value>Service Started</value>
  </data>
  <data name="LogServiceStopped" xml:space="preserve">
    <value>Service Stopped</value>
  </data>
  <data name="LogVsExited" xml:space="preserve">
    <value>Visual Studio Exited</value>
  </data>
  <data name="LogVsShutdown" xml:space="preserve">
    <value>Visual Studio Shutdown</value>
  </data>
  <data name="LogExecutionException" xml:space="preserve">
    <value>Execution Exception</value>
  </data>
  <data name="LogParameterConversionFailed" xml:space="preserve">
    <value>Parameter conversion failed</value>
  </data>

  <!-- Tool log details -->
  <data name="LogBuildStart" xml:space="preserve">
    <value>Start building</value>
  </data>
  <data name="LogWithConfiguration" xml:space="preserve">
    <value>Configuration: {0}</value>
  </data>
  <data name="LogProjectAndConfig" xml:space="preserve">
    <value>Project: {0}, Configuration: {1}</value>
  </data>
  <data name="LogGetAllOpenDocsStart" xml:space="preserve">
    <value>Get all open document information</value>
  </data>
  <data name="LogFoundOpenDocs" xml:space="preserve">
    <value>Found {0} open documents</value>
  </data>
  <data name="LogNoOpenDocs" xml:space="preserve">
    <value>No open documents found</value>
  </data>
  <data name="LogGetActiveDocStart" xml:space="preserve">
    <value>Get current active document information</value>
  </data>
  <data name="LogActiveDocPath" xml:space="preserve">
    <value>Document path: {0}</value>
  </data>
  <data name="LogNoActiveDoc" xml:space="preserve">
    <value>No active document</value>
  </data>
  <data name="LogGetSolutionInfoStart" xml:space="preserve">
    <value>Get detailed solution information</value>
  </data>
  <data name="LogProjectCount" xml:space="preserve">
    <value>Project count: {0}</value>
  </data>
  <data name="LogGetErrorListStart" xml:space="preserve">
    <value>Get error list with filter level: {0}</value>
  </data>
  <data name="LogErrorListCounts" xml:space="preserve">
    <value>Errors: {0}, Warnings: {1}</value>
  </data>
  <data name="LogRunCustomToolsStart" xml:space="preserve">
    <value>Run custom tools for project: {0}</value>
  </data>
  <data name="LogParameterConversionFailure" xml:space="preserve">
    <value>Parameter {0} conversion failed: {1}</value>
  </data>
  <data name="LogInstanceAndToolCount" xml:space="preserve">
    <value>Instance: {0}, Tool count: {1}</value>
  </data>
  <data name="LogServiceStartedWithDetails" xml:space="preserve">
    <value>Port: {0}, Instance: {1}, Tool count: {2}</value>
  </data>
  <data name="LogUserStopped" xml:space="preserve">
    <value>User manually stopped</value>
  </data>
  <data name="LogVsInstanceServiceStop" xml:space="preserve">
    <value>Associated Visual Studio instance exited, service will stop automatically</value>
  </data>
  <data name="LogVsInstanceServiceStopClosing" xml:space="preserve">
    <value>Associated Visual Studio instance is closing, service will stop automatically</value>
  </data>
  <data name="LogFeaturePermission" xml:space="preserve">
    <value>Feature: {0}, Permission: {1}</value>
  </data>
  <data name="LogFeaturePermissionValue" xml:space="preserve">
    <value>Feature: {0}, Permission value: {1}</value>
  </data>
  <data name="LogPermissionRequestDetails" xml:space="preserve">
    <value>Feature: {0}, Description: {1}</value>
  </data>
  <data name="LogPermissionValueDetails" xml:space="preserve">
    <value>Permission value: {0}</value>
  </data>

  <!-- Additional log strings for missing patterns -->
  <data name="LogToolExecutionFailed" xml:space="preserve">
    <value>Tool execution failed: {0}</value>
  </data>
  <data name="LogParameterCannotBeNull" xml:space="preserve">
    <value>Parameters cannot be null</value>
  </data>
  <data name="LogMissingRequiredParameter" xml:space="preserve">
    <value>Missing required parameter: {0}</value>
  </data>
  <data name="LogToolDataContextNotSet" xml:space="preserve">
    <value>Tool data context not set, cannot execute tool</value>
  </data>
  <data name="LogPermissionCheckException" xml:space="preserve">
    <value>Permission check</value>
  </data>
  <data name="LogException" xml:space="preserve">
    <value>Exception</value>
  </data>

  <!-- VsixAsync ToolWindow Resources -->
  <data name="GroupBoxMcpToolAuthorization" xml:space="preserve">
    <value>MCP Tool Authorization</value>
  </data>
  <data name="ButtonAuthorizeAll" xml:space="preserve">
    <value>Allow All</value>
  </data>
  <data name="ButtonAskAll" xml:space="preserve">
    <value>Ask All</value>
  </data>
  <data name="HeaderFeatureName" xml:space="preserve">
    <value>Feature Name</value>
  </data>
  <data name="HeaderDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="HeaderPermissionLevel" xml:space="preserve">
    <value>Permission Level</value>
  </data>
  <data name="ButtonSavePermissions" xml:space="preserve">
    <value>Save Permissions</value>
  </data>
  <data name="ButtonReloadPermissions" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="GroupBoxMcpServiceStatus" xml:space="preserve">
    <value>MCP Service Status</value>
  </data>
  <data name="TextMcpService" xml:space="preserve">
    <value>MCP Service</value>
  </data>
  <data name="TextStatusStopped" xml:space="preserve">
    <value>Status: Stopped</value>
  </data>
  <data name="ButtonStartService" xml:space="preserve">
    <value>Start Service</value>
  </data>
  <data name="ButtonStopService" xml:space="preserve">
    <value>Stop Service</value>
  </data>
  <data name="TextPortNumber" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="ButtonResetToDefault" xml:space="preserve">
    <value>Reset to Default</value>
  </data>
  <data name="TabMcpJsonConfig" xml:space="preserve">
    <value>MCP JSON Config</value>
  </data>
  <data name="TabClaudeCliConfig" xml:space="preserve">
    <value>Claude CLI Config</value>
  </data>
  <data name="GroupBoxLogs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="ButtonClearLog" xml:space="preserve">
    <value>Clear Log</value>
  </data>
  <data name="ButtonViewActivityLogHelp" xml:space="preserve">
    <value>View File Log Help</value>
  </data>
  <data name="HeaderTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="HeaderLevel" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="HeaderCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="HeaderMessage" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="TextReady" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="TextToolsCount" xml:space="preserve">
    <value>Tools: {0}</value>
  </data>
  <data name="TextServicesCount" xml:space="preserve">
    <value>Services: {0}</value>
  </data>
  <data name="MsgAllPermissionsAllowed" xml:space="preserve">
    <value>All tool permissions have been set to Allow</value>
  </data>
  <data name="MsgAllPermissionsAsked" xml:space="preserve">
    <value>All tool permissions have been set to Ask</value>
  </data>
  <data name="MsgPermissionsSaved" xml:space="preserve">
    <value>Permission configuration saved</value>
  </data>
  <data name="MsgPermissionsReloaded" xml:space="preserve">
    <value>Permission configuration reloaded</value>
  </data>
  <data name="MsgToolsListRefreshed" xml:space="preserve">
    <value>Tools list refreshed</value>
  </data>
  <data name="MsgMcpServiceStarted" xml:space="preserve">
    <value>MCP service started</value>
  </data>
  <data name="MsgMcpServiceStopped" xml:space="preserve">
    <value>MCP service stopped</value>
  </data>
  <data name="MsgInterfaceLogCleared" xml:space="preserve">
    <value>Interface log cleared</value>
  </data>
  <data name="MsgPortNumberSaved" xml:space="preserve">
    <value>Port number automatically saved as: {0}</value>
  </data>
  <data name="MsgPortNumberReset" xml:space="preserve">
    <value>Port number reset to default: {0}</value>
  </data>
  <data name="MsgStopServiceBeforePortChange" xml:space="preserve">
    <value>Please stop the MCP service before changing the port number</value>
  </data>
  <data name="MsgPortNumberRange" xml:space="preserve">
    <value>Port number must be in the range 1-65535</value>
  </data>
  <data name="MsgValidPortNumber" xml:space="preserve">
    <value>Please enter a valid port number</value>
  </data>
  <data name="MsgAutoSavePortFailed" xml:space="preserve">
    <value>Failed to auto-save port number: {0}</value>
  </data>
  <data name="MsgResetPortFailed" xml:space="preserve">
    <value>Failed to reset port number: {0}</value>
  </data>
  <data name="MsgClearLogFailed" xml:space="preserve">
    <value>Failed to clear log: {0}</value>
  </data>
  <data name="MsgCannotOpenHelpDoc" xml:space="preserve">
    <value>Cannot open help documentation: {0}</value>
  </data>
  <data name="TitleServiceRunning" xml:space="preserve">
    <value>Service Running - Port: {0}</value>
  </data>
</root>